#summary This page explains how to import/export emotions

= Introduction =

The EmotionML proposed recommendation is a W3C ongoing standard about representing emotions with a markup language. The main advantage of the standard is that it acknowledges for the lack of consensus on how to represent an emotion and thus proposes to standardize emotion wrapping. An emotion is described in terms of *descriptors* : category, dimension, appraisal and action-tendency. These descriptors are defined with a name and an optional intensity value.  

For instance, the following example shows a mixture of sadness, anger and fear:
{{{
<emotion category-set="http://www.w3.org/TR/emotion-voc/xml#big6">
    <category name="sadness" value="0.3"/>
    <category name="anger" value="0.8"/>
    <category name="fear" value="0.3"/>
</emotion>
}}}

When using a descriptor, it is required to define a *vocabulary* that lists all allowed names for the "name" attribute. In the example, the emotion defines a *category-set* URI that refers to a category vocabulary. If this category-set is not defined, the emotion is not valid with respect to the standard. EmotionML has a number of constraints on how to build a valid emotion. See [http://www.w3.org/TR/emotionml/ EmotionML Proposed Recommendation] for a full description of the standard.

This page explains how to use this implementation of EmotionML, how to build emotions, how to export them, and how to import them.


= Overview =

== General approach ==

The general approach of the library is to be rather liberal on how to build and modify emotions with respect to the EmotionML constraints, and only check those constraints when importing and exporting. For instance all descriptors can be described with a value or with a trace (a dynamic representation of value), but not both at the same time. Because it would be too cumbersome to verify the validity of emotions with regards to all constraints, the library allows for the construction of invalid emotions, for instance a category with both a trace and a value. When trying to export an invalid emotion or to import an invalid emotion, an EmotionMLValidationException is thrown.

== Vocabularies handling ==

One of important feature of EmotionML is how it handles vocabulary references using URIs.


= Exporting emotions =

We show here some basic examples on how to build and export emotions. These examples can be found in the fr.loria.synalp.emotionml.examples package.

== Example 1 ==

{{{
Emotion emotion = new Emotion(Big6.FEAR);
System.out.println(emotion+"\n");
new EmotionMLExporter().export(emotion, System.out);
}}}

  